apply plugin: 'com.android.application'
apply plugin: 'android-apt'
def RetrofitVersion = '2.2.0'
def AAVersion = '3.2'
def AndroidVersion = '25.3.1'

// For android annotation
buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        // The latest version of the android-apt plugin
        classpath 'com.neenbedankt.gradle.plugins:android-apt:1.8'
    }
}

repositories {
    mavenCentral()
}


android {
    compileSdkVersion 25
    buildToolsVersion "25.0.3"

    signingConfigs {
        release {
            if (!System.getenv('CI')) {
                def signFile = file("../local.properties")
                def signingProps = new Properties()
                signingProps.load(new FileInputStream(signFile))
                storeFile file("../keystores/release.jks")
                storePassword signingProps['storePassword']
                keyAlias signingProps['keyAlias']
                keyPassword signingProps['keyPassword']
            }
        }

        debug {
            if (!System.getenv('CI')) {
                storeFile file("../keystores/debug.jks")
            }
        }
    }


    defaultConfig {
        applicationId "vn.asiantech.androidboilderplate"
        minSdkVersion 14
        targetSdkVersion 25
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            debuggable false
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            applicationVariants.all { variant ->
                appendVersionNameVersionCode(variant)
            }
        }

        debug {
            debuggable true
            applicationIdSuffix ".debug"
            signingConfig signingConfigs.debug
            applicationVariants.all { variant ->
                appendVersionNameVersionCode(variant)
            }
        }
    }

    lintOptions {
        abortOnError false
        checkReleaseBuilds false
        lintConfig file('lint.xml')
        xmlOutput file("${buildDir}/outputs/lint-results.xml")
    }
}

@SuppressWarnings("GroovyAssignabilityCheck")
def appendVersionNameVersionCode(variant) {
    variant.outputs.each { output ->
        def applicationId = variant.mergedFlavor.applicationId + (variant.buildType.applicationIdSuffix == null ? "" : variant.buildType.applicationIdSuffix)
        if (variant.buildType.name == android.buildTypes.debug.name || variant.buildType.name == android.buildTypes.release.name || variant.buildType.name == android.buildTypes.deploygateRelease.name) {
            if (output.zipAlign) {
                def file = output.outputFile
                output.outputFile = new File(file.parentFile, "${variant.buildType.name}_${applicationId}_v${variant.versionName}-${variant.versionCode}.apk")
            }
        }
    }
}

apt {
    arguments {
        androidManifestFile variant.outputs[0]?.processResources?.manifestFile
        resourcePackageName android.defaultConfig.applicationId
        //noinspection GroovyAssignabilityCheck
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    compile "com.android.support:appcompat-v7:$AndroidVersion"
    testCompile 'junit:junit:4.12'
    // Otto follow Observer
    compile 'com.squareup:otto:1.3.8'
    // Picasso loading images
    compile 'com.squareup.picasso:picasso:2.5.2'
    // Android Annonatations
    apt "org.androidannotations:androidannotations:$AAVersion"
    compile "org.androidannotations:androidannotations-api:$AAVersion"
    // Retrofit
    compile "com.squareup.retrofit2:retrofit:$RetrofitVersion"
    compile "com.squareup.retrofit2:converter-gson:$RetrofitVersion"
    compile "com.squareup.retrofit2:adapter-rxjava2:$RetrofitVersion"
    compile 'com.squareup.okhttp3:logging-interceptor:3.4.1'
    compile 'com.squareup.okhttp3:okhttp:3.4.1'
    // ReactiveX
    compile 'io.reactivex.rxjava2:rxandroid:2.0.1'
    // Because RxAndroid releases are few and far between, it is recommended you also
    // explicitly depend on RxJava's latest version for bug fixes and new features.
    compile 'io.reactivex.rxjava2:rxjava:2.1.0'
}
apply from: "https://raw.githubusercontent.com/monstar-lab/gradle-android-ci-check/1.3.1/ci.gradle"